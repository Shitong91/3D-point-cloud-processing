void projectPointCloud()将激光雷达得到的数据看成一个16x1800的点云阵列。然后根据每个点云返回的XYZ数据将他们对应到这个阵列里去。

这样做是为了在下一步使用图像处理的方法。这里根据point cloud 中每个点的
垂直角度和水平角度来确定他们在点云阵列中的位置。

1. 行号计算

行号是基于竖直角度计算的

 verticalAngle = atan2(thisPoint.z, sqrt(thisPoint.x * thisPoint.x + thisPoint.y * thisPoint.y)) * 180 / M_PI;
            rowIdn = (verticalAngle + ang_bottom) / ang_res_y;   //从下往上计数，-15度记为初始线，第0线，一共16线(N_SCAN=16)。
            if (rowIdn < 0 || rowIdn >= N_SCAN)
                continue;


假设此时计算的点的竖直角度为 -15
根据公式
rowIdn = (verticalAngle + ang_bottom) / ang_res_y;

 竖直角度                       行序号

   -15                       (-15+15.1)/2=0

   -13                       (-13+15.1)/2=1 

   -11                       (-11+15.1)/2=2

    ... 

    15                        (15+15.1)/2=15  


从上面的计算可以知道，相邻线之间间隔2度，我们计算的行序号和Sensor 
中的线号相同，因为传感器的线号不是按照顺序排列的，而我们的点云
阵列为了模仿图像的像素位置，应该是顺序排列的，所以这里使用了一个新的
公式来计算行号。而且我们会发现，行号的起始位置是从下往上数的，也就是说
-15度为0行

2. 列号计算

列号是基于点的水平角度计算的。

下面是网上给的一段关于计算列号的解释：

------------------------------------------------
columnIdn = -round((horizonAngle-90.0)/ang_res_x) + Horizon_SCAN/2;

if (columnIdn >= Horizon_SCAN)
		columnIdn -= Horizon_SCAN;

if (columnIdn < 0 || columnIdn >= Horizon_SCAN)
		continue;

先把columnIdn从horizonAngle:(-PI,PI]转换到columnIdn:[H/4,5H/4],然后判断columnIdn大小，再讲它的范围转换到了[0,H) (H:Horizon_SCAN)。 这样就把扫描开始的地方角度为0与角度为360的连在了一起，非常巧妙。
-------------------------------------------------

针对上面的一段话进行分析
1)
horizonAngle = atan2(thisPoint.x, thisPoint.y) * 180 / M_PI;

求的水平角度不应该是y/x,而不应该是x/y。 所以不是很明白

2) 先把columnIdn从horizonAngle:(-PI,PI]转换到columnIdn:[H/4,5H/4]
其中H指的是Horizon_SCAN(1800)
因为atan2的取值范围是(-PI,PI]，
通过式子
columnIdn = -round((horizonAngle-90.0)/ang_res_x) + Horizon_SCAN/2;

horizonAngle                           columnIdn
-PI                                     5H/4

 PI                                     1H/4 

所以就转化为 [H/4,5H/4)

3) if (columnIdn >= Horizon_SCAN)
		columnIdn -= Horizon_SCAN;

针对[H/4,5H/4),满足columnIdn >= Horizon_SCAN部分的是
[4H/4,5H/4)
然后通过上式，变为[0,1H/4),剩下的部分是[H/4,H) 
结合起来就是 [0,H)



